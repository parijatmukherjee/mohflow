name: CI
permissions:
  contents: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      python_version:
        description: 'Python version to test with'
        required: false
        default: '3.10'
        type: choice
        options:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
      run_coverage:
        description: 'Run coverage report'
        required: false
        default: true
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ github.event_name == 'workflow_dispatch' && fromJson(format('["{0}"]', inputs.python_version)) || fromJson('["3.8", "3.9", "3.10", "3.11"]') }}

    steps:
    - uses: actions/checkout@v5

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Format check with black
      run: |
        black --check src tests

    - name: Lint with flake8
      run: |
        flake8 src tests

    - name: Run tests with pytest
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ inputs.run_coverage }}" = "false" ]; then
          pytest tests/
        else
          pytest tests/ --cov=mohflow --cov-report=xml
        fi

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
    - uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: parijatmukherjee
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*